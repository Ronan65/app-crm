{
  "name": "w3c-cors",
  "version": "0.2.0",
  "description": "CORS middleware",
  "keywords": [
    "http",
    "CORS"
  ],
  "author": {
    "name": "Guillaume Biton"
  },
  "licence": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/GuillaumeBiton/node-CORS.git"
  },
  "readme": "CORS\n====\nCORS configuration middleware.\n\n# Installation\n\n    npm install w3c-cors\n\n# Usage\n\nCORS middleware needs to be configured. You can configure it with an argument like this one :\n\n    {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Headers\": \"Authorisation, X-Requested-With\"\n    }\n    \nit can be loaded by passing an object or a function.\n\nBecause configuration options are plain W3C specification terms, you can get every attributes from [W3C CORS specification](http://www.w3.org/TR/cors/)\n\n# examples\n\nconfiguration throw object :\n\n    CORS({\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Headers\": \"Authorisation, X-Requested-With\"\n    })\n    \nconfiguration throw a json file: \n\n    CORS(function() {\n        return require(__dirname + '/config.json');\n    })\n    \na full example using [express](http://expressjs.com/) is available in the example directory.\n\n# License\n\nMIT License, see LICENSE",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/GuillaumeBiton/node-CORS/issues"
  },
  "_id": "w3c-cors@0.2.0",
  "dist": {
    "shasum": "b75d0916730c3d1c9245e8bfc17258d9df363a64"
  },
  "_from": "w3c-cors@",
  "_resolved": "https://registry.npmjs.org/w3c-cors/-/w3c-cors-0.2.0.tgz"
}
